apply plugin: 'com.android.application'

// Local keystore for production signing
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.igrow.android"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        // need multiDex enables as we pop the 0xffff number of
        // methods limit
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {

        debug {
            minifyEnabled false // TODO temporarily false due to dependency on play-services-base
                                // - only debug Build Type affected
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {



            all {

                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }

                includeAndroidResources = true

            }
            // Fixes:
            // Caused by: java.lang.RuntimeException: Method isEmpty in android.text.TextUtils
            // not mocked. See http://g.co/androidstudio/not-mocked for details.
            //
            // when initializing CountingIdlingResource
            //returnDefaultValues = true
        }
    }

}

repositories {
    jcenter()
    mavenLocal()  // Add Maven local repository for igrow-api-java
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.google.code.findbugs:jsr305:2.0.1"

    // As we allow running on API level >=19 , need to patch the
    // classloader on the target, which this library does for us.
    implementation 'com.android.support:multidex:1.0.2'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-android
    implementation 'org.slf4j:slf4j-android:1.7.22'

    // Our local API dependencies
    implementation 'com.igrow:igrow-api-java:1.0-SNAPSHOT'

    // Google Sign-in
    implementation 'com.google.android.gms:play-services-auth:11.8.0'

    // Google Dagger
    implementation 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'

    //implementation 'org.greenrobot:eventbus:3.0.0'

    // Room
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0'

    // Lifecycle extensions
    implementation 'android.arch.lifecycle:extensions:1.0.0'

    // Support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    // Espresso-idling-resource for synchronization with background jobs
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.1'

    // Mapbox

    // TODO: add support for MapBox in a separate branch
    implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:4.1.1@aar') {
        transitive = true
    }

    // osmdroid
    implementation 'org.osmdroid:osmdroid-android:5.5:release@aar'

    // Testing

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'

    // Mockito framework
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"

    // Power Mockito
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$rootProject.ext.powerMockitoVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$rootProject.ext.powerMockitoVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$rootProject.ext.powerMockitoVersion"

    testImplementation "android.arch.core:core-testing:$rootProject.archLifecycleVersion"

    androidTestImplementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoVersion"

    // Android JUnit Runner
    androidTestImplementation 'com.android.support.test:runner:1.0.1'

    // JUnit4 Rules
    androidTestImplementation 'com.android.support.test:rules:1.0.1'

    // Espresso core
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"

    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions,

    //                      Accessibility checks, CountingIdlingResource
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"

    // Espresso-web for WebView support
    androidTestImplementation "com.android.support.test.espresso:espresso-web:$rootProject.ext.espressoVersion"

    // Espresso-idling-resource for synchronization with background jobs
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    // Espresso-intents for validation and stubbing of Intents
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"

    // UiAutomator
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    testImplementation 'org.robolectric:robolectric:3.5.1'
}

apply plugin: 'com.google.gms.google-services'
